jdbc-journal {
  slick = ${slick}
  circuit-breaker {
    max-failures = 5
    call-timeout = 60s
    reset-timeout = 60s
  }
}
# the akka-persistence-snapshot-store in use
jdbc-snapshot-store {
  slick = ${slick}
}
# the akka-persistence-query provider in use
jdbc-read-journal {
  slick = ${slick}
  max-buffer-size = "5"
}

slick {
  profile = "slick.jdbc.PostgresProfile$"
  db {
    connectionPool = "HikariCP"
    host = "localhost"
    host = ${?POSTGRES_HOST}
    url = "jdbc:postgresql://"${slick.db.host}":5432/"${portcode}"?reWriteBatchedInserts=true&ssl="${use-pg-ssl}
    user = ""${portcode}""
    user = ${?POSTGRES_USER}
    password = ""${portcode}""
    password = ${?POSTGRES_PASSWORD}
    driver = "org.postgresql.Driver"
    numThreads = 5
    numThreads = ${?AKKADB_THREADS}
    maxConnections = 5
    maxConnections = ${?AKKADB_MAX_CONNECTIONS}
  }
}

akka {
  actor {
    serializers {
      protobuf = "optimiser.actors.serialisers.ProtoBufSerializer"
    }
    serialization-bindings {
      "server.protobuf.messages.DesksAndWaits.DesksAndWaitsStateMessage" = protobuf
      "server.protobuf.messages.DesksAndWaits.DesksAndWaitsUpdatesMessage" = protobuf
      "server.protobuf.messages.DesksAndWaits.DesksAndWaitsMessage" = protobuf
      "server.protobuf.messages.OptimiserQueue.DaysToAddMessage" = protobuf
      "server.protobuf.messages.OptimiserQueue.DaysToRemoveMessage" = protobuf
      "server.protobuf.messages.QueueLoad.QueueLoadMessage" = protobuf
      "server.protobuf.messages.QueueLoad.QueueLoadsMessage" = protobuf
    }
  }
  persistence {
    journal {
      plugin = "jdbc-journal"
      auto-start-journals = ["jdbc-journal"]
    }

    snapshot-store {
      plugin = "jdbc-snapshot-store"
      auto-start-snapshot-stores = ["jdbc-snapshot-store"]
    }
  }
}
